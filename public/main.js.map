{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.sass","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/library-tree/library-tree.component.html","webpack:///./src/app/components/library-tree/library-tree.component.sass","webpack:///./src/app/components/library-tree/library-tree.component.ts","webpack:///./src/app/config/backend-config.ts","webpack:///./src/app/config/spotify-api.config.ts","webpack:///./src/app/config/spotify-auth.config.ts","webpack:///./src/app/config/wikidata.config.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/models/wikidata-models.ts","webpack:///./src/app/services/wikidata/sparql-queries.ts","webpack:///./src/app/services/wikidata/wikidata.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { spotify } from './config/spotify-api.config';\r\nimport { Component } from '@angular/core';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { spotifyAuthConfig } from './config/spotify-auth.config';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private oauthService: OAuthService,\r\n    private router: Router) {\r\n    this.configureSpotifyAuth();\r\n  }\r\n\r\n  private async configureSpotifyAuth() {\r\n    this.oauthService.configure(spotifyAuthConfig);\r\n    this.oauthService.setStorage(sessionStorage);\r\n    const isSuccess = await this.oauthService.tryLogin();\r\n    if (isSuccess) {\r\n      spotify.setAccessToken(this.oauthService.getAccessToken());\r\n      this.router.navigate(['/home']);\r\n    } else {\r\n      this.oauthService.initImplicitFlow();\r\n    }\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { OAuthModule } from 'angular-oauth2-oidc';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { LibraryTreeComponent } from './components/library-tree/library-tree.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LibraryTreeComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    VirtualScrollerModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    OAuthModule.forRoot(),\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<app-library-tree>\\r\\n</app-library-tree>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { spotify } from 'src/app/config/spotify-api.config';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.sass']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  title = 'wikidata-spotify-matcher';\r\n  username = '';\r\n\r\n  async ngOnInit() {\r\n    const me = await spotify.getMe();\r\n    this.username = me.display_name;\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"isLoading\\\">\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n  <h3>Please be patient while we are getting your spotify library</h3>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isLoading\\\" class=\\\"row\\\">\\r\\n  <div class=\\\"loading-indicator\\\">\\r\\n    <mat-spinner *ngIf=\\\"wikiDetailsLoadMask\\\"></mat-spinner>\\r\\n  </div>\\r\\n  <div class=\\\"column\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-header>\\r\\n        <form>\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Type to filter artists\\\" [ngModel]=\\\"artistSearchTerm\\\" (ngModelChange)=\\\"filterArtists($event)\\\"\\r\\n              name=\\\"artistSearchTerm\\\">\\r\\n          </mat-form-field>\\r\\n        </form>\\r\\n      </mat-card-header>\\r\\n      <mat-action-list>\\r\\n        <virtual-scroller #scroll [items]=\\\"library\\\">\\r\\n          <button *ngFor=\\\"let artist of scroll.viewPortItems\\\" mat-list-item (click)=\\\"artistClicked(artist)\\\">{{artist.name}}</button>\\r\\n        </virtual-scroller>\\r\\n      </mat-action-list>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div class=\\\"column\\\" *ngIf=\\\"selectedArtist\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>{{selectedArtist.name}}</mat-card-title>\\r\\n        <mat-card-subtitle>ARTIST</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-action-list>\\r\\n        <button *ngFor=\\\"let album of selectedArtist.albums\\\" mat-list-item (click)=\\\"albumClicked(album)\\\">{{album.name}}</button>\\r\\n      </mat-action-list>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div class=\\\"column\\\" *ngIf=\\\"selectedAlbum\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>{{selectedAlbum.name}}</mat-card-title>\\r\\n        <mat-card-subtitle>ALBUM</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-action-list>\\r\\n        <button *ngFor=\\\"let track of selectedAlbum.tracks\\\" mat-list-item (click)=\\\"onTrackSelected(track)\\\">{{track.name}}</button>\\r\\n      </mat-action-list>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div class=\\\"details-column\\\" *ngIf=\\\"selectedTrack\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Wikidata matches</mat-card-title>\\r\\n        <mat-card-subtitle>{{selectedArtist.name}}: {{selectedTrack.name}}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n\\r\\n      <div *ngIf=\\\"matchFound && !exactMatch\\\">\\r\\n        <mat-list>\\r\\n          <mat-list-item *ngFor=\\\"let track of matchingWikidataSongs\\\">\\r\\n            <div>\\r\\n              {{getArtists(track)}}{{':'}}{{' ' + track.name}}\\r\\n            </div>\\r\\n            <div class=\\\"auto-align\\\">\\r\\n              <button mat-raised-button color=\\\"accent\\\" (click)=\\\"updateSpotifyIdForSong(track)\\\">Yep, this is it.</button>\\r\\n            </div>\\r\\n          </mat-list-item>\\r\\n          <mat-list-item>\\r\\n            <button mat-raised-button color=\\\"primary\\\" style=\\\"width: 100%\\\" (click)=\\\"createSong(selectedTrack)\\\">\\r\\n              Can't find your track? Click here to create a new one in Wikidata.\\r\\n            </button>\\r\\n          </mat-list-item>\\r\\n        </mat-list>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"matchFound && exactMatch && matchingWikidataSongs[0]\\\">\\r\\n        <mat-list>\\r\\n          <mat-list-item>\\r\\n            <span>Track found in Wikidata! It is an exact match!</span>\\r\\n          </mat-list-item>\\r\\n          <mat-list-item>\\r\\n            <span>{{matchingWikidataSongs[0].name}}</span>\\r\\n          </mat-list-item>\\r\\n          <mat-list-item>\\r\\n            <span>{{matchingWikidataSongs[0].description}}</span>\\r\\n          </mat-list-item>\\r\\n        </mat-list>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!matchFound && !exactMatch\\\">\\r\\n        <mat-list>\\r\\n          <mat-list-item>\\r\\n            <span>No matching track found in Wikidata!</span>\\r\\n          </mat-list-item>\\r\\n          <mat-list-item>\\r\\n            <button mat-raised-button color=\\\"primary\\\" style=\\\"width: 100%\\\" (click)=\\\"createSong(selectedTrack)\\\">\\r\\n              Save this to wikidata.\\r\\n            </button>\\r\\n          </mat-list-item>\\r\\n        </mat-list>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</div>\"","module.exports = \"virtual-scroller {\\n  width: 100%;\\n  height: 75vh; }\\n\\nmat-action-list {\\n  height: 75vh;\\n  overflow-y: auto; }\\n\\nmat-list {\\n  height: 75vh;\\n  overflow-y: auto; }\\n\\n.row {\\n  white-space: nowrap;\\n  height: 90vh; }\\n\\n.column {\\n  display: inline-block;\\n  height: 100%;\\n  margin: 0.5rem;\\n  width: 500px; }\\n\\n.details-column {\\n  display: inline-block;\\n  height: 100%;\\n  margin: 0.5rem;\\n  width: 800px; }\\n\\n.loading-indicator {\\n  position: fixed;\\n  z-index: 999;\\n  height: 2em;\\n  width: 2em;\\n  overflow: show;\\n  margin: auto;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0; }\\n\\n.auto-align {\\n  margin: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saWJyYXJ5LXRyZWUvRDpcXFdvcmtzcGFjZVxcd2lraWRhdGEtc3BvdGlmeS1tYXRjaGVyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxsaWJyYXJ5LXRyZWVcXGxpYnJhcnktdHJlZS5jb21wb25lbnQuc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVc7RUFDWCxhQUFZLEVBQUc7O0FBRWpCO0VBQ0ksYUFBWTtFQUNaLGlCQUFnQixFQUFHOztBQUV2QjtFQUNJLGFBQVk7RUFDWixpQkFBZ0IsRUFBRzs7QUFFdkI7RUFDSSxvQkFBbUI7RUFDbkIsYUFBWSxFQUFHOztBQUVuQjtFQUNJLHNCQUFxQjtFQUNyQixhQUFZO0VBQ1osZUFBYztFQUNkLGFBQVksRUFBRzs7QUFFbkI7RUFDSSxzQkFBcUI7RUFDckIsYUFBWTtFQUNaLGVBQWM7RUFDZCxhQUFZLEVBQUc7O0FBRW5CO0VBQ0UsZ0JBQWU7RUFDZixhQUFZO0VBQ1osWUFBVztFQUNYLFdBQVU7RUFDVixlQUFjO0VBQ2QsYUFBWTtFQUNaLE9BQU07RUFDTixRQUFPO0VBQ1AsVUFBUztFQUNULFNBQVEsRUFBRzs7QUFFYjtFQUNJLGFBQVksRUFBRyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlicmFyeS10cmVlL2xpYnJhcnktdHJlZS5jb21wb25lbnQuc2FzcyIsInNvdXJjZXNDb250ZW50IjpbInZpcnR1YWwtc2Nyb2xsZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA3NXZoOyB9XG5cbm1hdC1hY3Rpb24tbGlzdCB7XG4gICAgaGVpZ2h0OiA3NXZoO1xuICAgIG92ZXJmbG93LXk6IGF1dG87IH1cblxubWF0LWxpc3Qge1xuICAgIGhlaWdodDogNzV2aDtcbiAgICBvdmVyZmxvdy15OiBhdXRvOyB9XG5cbi5yb3cge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgaGVpZ2h0OiA5MHZoOyB9XG5cbi5jb2x1bW4ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwLjVyZW07XG4gICAgd2lkdGg6IDUwMHB4OyB9XG5cbi5kZXRhaWxzLWNvbHVtbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXJnaW46IDAuNXJlbTtcbiAgICB3aWR0aDogODAwcHg7IH1cblxuLmxvYWRpbmctaW5kaWNhdG9yIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk7XG4gIGhlaWdodDogMmVtO1xuICB3aWR0aDogMmVtO1xuICBvdmVyZmxvdzogc2hvdztcbiAgbWFyZ2luOiBhdXRvO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7IH1cblxuLmF1dG8tYWxpZ24ge1xuICAgIG1hcmdpbjogYXV0bzsgfVxuXG5cbiJdfQ== */\"","import { ArtistWithAlbums, AlbumWithTracks } from './../../models/spotify-models';\r\nimport { Component, OnInit, Output, EventEmitter, AfterViewChecked } from '@angular/core';\r\nimport { spotify } from 'src/app/config/spotify-api.config';\r\nimport { Library } from 'src/app/models/spotify-models';\r\nimport { WikidataService } from 'src/app/services/wikidata/wikidata.service';\r\nimport { WdkSongWrapper } from 'src/app/models/wikidata-models';\r\n\r\n@Component({\r\n  selector: 'app-library-tree',\r\n  templateUrl: './library-tree.component.html',\r\n  styleUrls: ['./library-tree.component.sass']\r\n})\r\nexport class LibraryTreeComponent implements OnInit, AfterViewChecked {\r\n\r\n  constructor (private wdk: WikidataService) {}\r\n\r\n  selectedArtist: ArtistWithAlbums;\r\n  selectedAlbum: AlbumWithTracks;\r\n  selectedTrack: SpotifyApi.TrackObjectFull;\r\n  artistSearchTerm = '';\r\n\r\n  isLoading = false;\r\n  wikiDetailsLoadMask = false;\r\n  library: ArtistWithAlbums[] = [];\r\n  tracks: SpotifyApi.TrackObjectFull[] = [];\r\n\r\n  matchingWikidataSongs: WdkSongWrapper[] = [];\r\n  matchFound = false;\r\n  exactMatch = false;\r\n\r\n  private unfilteredLibrary: ArtistWithAlbums[];\r\n  private viewCheckedCallback: any;\r\n\r\n  async ngOnInit() {\r\n    this.isLoading = true;\r\n    this.tracks = await this.getFullLibrary();\r\n    this.unfilteredLibrary = this.groupByArtistAndAlbum(this.tracks);\r\n    this.library = [...this.unfilteredLibrary];\r\n    this.isLoading = false;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (typeof this.viewCheckedCallback === 'function') {\r\n      this.viewCheckedCallback();\r\n    }\r\n  }\r\n\r\n  private waitForUpdate() {\r\n    return new Promise((resolve, _reject) => {\r\n      this.viewCheckedCallback = resolve;\r\n    });\r\n  }\r\n\r\n  artistClicked(artist: ArtistWithAlbums) {\r\n    this.waitForUpdate().then(this.scrollToTheRight);\r\n    this.selectedArtist = artist;\r\n    if (artist.albums.length === 1) {\r\n      this.selectedAlbum = artist.albums[0];\r\n    } else {\r\n      this.selectedAlbum = null;\r\n    }\r\n\r\n    this.selectedTrack = null;\r\n  }\r\n\r\n  albumClicked(album: AlbumWithTracks) {\r\n    this.waitForUpdate().then(this.scrollToTheRight);\r\n    this.selectedAlbum = album;\r\n\r\n    this.selectedTrack = null;\r\n  }\r\n\r\n  filterArtists(term: string) {\r\n    this.artistSearchTerm = term;\r\n    if (!term) {\r\n      return;\r\n    }\r\n    this.library = this.unfilteredLibrary\r\n      .filter(a => a.name.toLowerCase().includes(term.toLowerCase()));\r\n  }\r\n\r\n  private groupByArtistAndAlbum(library: SpotifyApi.TrackObjectFull[]): Library {\r\n    const albumLib = library.reduce((albums, track) => {\r\n      const album = albums.find(a => a.id === track.album.id);\r\n      if (album) {\r\n        album.tracks.push(track);\r\n      } else {\r\n        albums.push({\r\n          ...track.album,\r\n          artist: track.artists[0],\r\n          tracks: [track]\r\n        });\r\n      }\r\n      return albums;\r\n    }, []);\r\n    const artistLib = albumLib.reduce((artists, album) => {\r\n      const artist = artists.find(a => a.id === album.artist.id);\r\n      if (artist) {\r\n        artist.albums.push(album);\r\n      } else {\r\n        artists.push({\r\n          ...album.artist,\r\n          albums: [album]\r\n        });\r\n      }\r\n      return artists;\r\n    }, []);\r\n    return artistLib;\r\n  }\r\n\r\n  private async getFullLibrary() {\r\n    const limit = 50;\r\n    const firstResponse = await spotify.getMySavedTracks({ limit });\r\n    let library = firstResponse.items;\r\n    const promises = [];\r\n    for (let offset = limit; offset < firstResponse.total; offset += limit) {\r\n      const promise = spotify.getMySavedTracks({ limit, offset });\r\n      promises.push(promise);\r\n    }\r\n    try {\r\n      const responses = await Promise.all(promises);\r\n      const itemsList = responses.map(r => r.items);\r\n      library = library.concat(...itemsList);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return library.map(t => t.track);\r\n  }\r\n\r\n  private scrollToTheRight() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: window.outerWidth,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  async onTrackSelected(track: SpotifyApi.TrackObjectFull) {\r\n    this.matchingWikidataSongs = [];\r\n    this.selectedTrack = track;\r\n    this.wikiDetailsLoadMask = true;\r\n\r\n    console.log('Selected track: ', this.selectedTrack);\r\n\r\n    const entity = await this.wdk.getSongBySpotifyId(track.id);\r\n    if (entity) {\r\n      console.log('Yeah we found a song in wikidata by its spotify id!');\r\n      const song = new WdkSongWrapper(entity, this.wdk);\r\n      this.matchingWikidataSongs.push(song);\r\n\r\n      console.log('The song:', song);\r\n\r\n      this.waitForUpdate().then(this.scrollToTheRight);\r\n      this.wikiDetailsLoadMask = false;\r\n      this.matchFound = true;\r\n      this.exactMatch = true;\r\n      return;\r\n    }\r\n    const entities = await this.wdk.findSongsByTitle(track.name);\r\n    if (!entities || entities.length === 0) {\r\n      console.warn('Not found in wikidata: ' + track.name);\r\n\r\n      this.waitForUpdate().then(this.scrollToTheRight);\r\n      this.wikiDetailsLoadMask = false;\r\n      this.matchFound = false;\r\n      this.exactMatch = false;\r\n      return;\r\n    }\r\n    console.log('Found songs in wikidata for: ' + track.name);\r\n    Object.values(entities).forEach(async e => {\r\n      const song = new WdkSongWrapper(e, this.wdk);\r\n      await song.waitData;\r\n\r\n      this.matchingWikidataSongs.push(song);\r\n      this.waitForUpdate().then(this.scrollToTheRight);\r\n      this.wikiDetailsLoadMask = false;\r\n      this.matchFound = true;\r\n      this.exactMatch = false;\r\n\r\n      console.log('The song:', song);\r\n    });\r\n  }\r\n\r\n  private getArtists(song: WdkSongWrapper) {\r\n    return song.artists.map(a => a.labels['en']).join(', ');\r\n  }\r\n\r\n  private createSong(song: SpotifyApi.TrackObjectFull) {\r\n    this.wikiDetailsLoadMask = true;\r\n    this.wdk.createSong(song.name, song.artists.map(a => a.name), song.id).then(onSuccess => {\r\n      this.wikiDetailsLoadMask = false;\r\n      this.onTrackSelected(song);\r\n    }).catch(onError => {\r\n      console.error('Failed to create song:', song);\r\n    });\r\n  }\r\n\r\n  private updateSpotifyIdForSong(song: WdkSongWrapper) {\r\n    this.wikiDetailsLoadMask = true;\r\n    this.wdk.setSpotifyTrackIdForEntity(song.entityId, this.selectedTrack.id).then(onSuccess => {\r\n      this.wikiDetailsLoadMask = false;\r\n      this.onTrackSelected(this.selectedTrack);\r\n    }).catch(onError => {\r\n      console.error('Failed to update song:', song);\r\n    });\r\n  }\r\n\r\n  private hasArtist(song: WdkSongWrapper) {\r\n    return song.artists !== undefined && song.artists.length > 0;\r\n  }\r\n}\r\n","export const backendConfig = {\r\n    host: 'http://localhost:3000',\r\n};\r\n","import SpotifyWebApi from 'spotify-web-api-js';\r\n\r\nexport const spotify = new SpotifyWebApi();\r\n","import { AuthConfig } from 'angular-oauth2-oidc';\r\n\r\nexport const spotifyAuthConfig: AuthConfig = {\r\n  loginUrl: 'https://accounts.spotify.com/authorize',\r\n  redirectUri: window.location.origin + '/index.html',\r\n  clientId: '1b93280bddbd4807bf755f609beccea4',\r\n  scope: 'user-library-read',\r\n  responseType: 'token',\r\n  oidc: false,\r\n};\r\n","export const propertyIds = {\r\n    performer: 'P175',\r\n    partOf: 'P361',\r\n    instanceOf: 'P31',\r\n    genre: 'P136',\r\n    releaseDate: 'P577',\r\n    spotifyTrackId: 'P2207',\r\n    spotifyAlbumId: 'P2205',\r\n    spotifyArtistId: 'P1902',\r\n};\r\n\r\nexport const classIds = {\r\n    human: 'Q5',\r\n    song: 'Q7366',\r\n    single: 'Q134556', // a lot track instance of single and not instance of song :(\r\n    studioAlbum: 'Q208569',\r\n    album: 'Q482994',\r\n};\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatButtonModule,\r\n  MatTreeModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatPaginatorModule,\r\n  MatExpansionModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatPaginatorModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatPaginatorModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { propertyIds } from './../config/wikidata.config';\r\nimport { WikidataService } from './../services/wikidata/wikidata.service';\r\n\r\nexport class ByIdQueryOptions {\r\n    ids: string[];\r\n    languages?: string[] = ['en'];\r\n    props?: string[] = ['info', 'claims', 'id', 'descriptions', 'labels'];\r\n    format = 'json';\r\n\r\n    constructor(ids: string[]) {\r\n        this.ids = ids;\r\n    }\r\n}\r\n\r\nexport interface WdkEntity {\r\n    claims: ClaimsMap;\r\n    descriptions: {\r\n        en: string;\r\n    };\r\n    id: string;\r\n    labels: {\r\n        en: string;\r\n    };\r\n    modified: Date;\r\n    type: string;\r\n}\r\n\r\nexport interface ClaimsMap {\r\n    [propId: string]: string[];\r\n}\r\n\r\nexport class WdkSongWrapper {\r\n\r\n    private static readonly relatedPropIds = [\r\n        propertyIds.genre,\r\n        propertyIds.partOf,\r\n        propertyIds.performer,\r\n    ];\r\n    private relatedEntites: WdkEntity[] = [];\r\n    public readonly waitData: Promise<any>;\r\n\r\n    constructor(\r\n        private entity: WdkEntity,\r\n        service: WikidataService\r\n    ) {\r\n        let ids: string[] = [];\r\n        WdkSongWrapper.relatedPropIds.forEach(propId => {\r\n            if (entity.claims[propId]) {\r\n                ids = ids.concat(entity.claims[propId]);\r\n            }\r\n        });\r\n        if (ids.length === 0) {\r\n            this.waitData = Promise.resolve();\r\n            return;\r\n        }\r\n        this.waitData = service.getEntities(new ByIdQueryOptions(ids))\r\n            .then(entites => this.relatedEntites = Object.values(entites));\r\n    }\r\n\r\n    get name() {\r\n        return this.entity.labels.en;\r\n    }\r\n\r\n    get description() {\r\n        return this.entity.descriptions.en;\r\n    }\r\n\r\n    get artists() {\r\n        const ids = this.entity.claims[propertyIds.performer];\r\n        return ids\r\n            ? this.findEntitesByIds(ids)\r\n            : [];\r\n    }\r\n\r\n    get albums() {\r\n        const ids = this.entity.claims[propertyIds.partOf];\r\n        return ids\r\n            ? this.findEntitesByIds(ids)\r\n            : [];\r\n    }\r\n\r\n    get genres() {\r\n        const ids = this.entity.claims[propertyIds.genre];\r\n        return ids\r\n            ? this.findEntitesByIds(ids)\r\n            : [];\r\n    }\r\n\r\n    get spotifyId() {\r\n        const ids = this.entity.claims[propertyIds.spotifyTrackId];\r\n        return this.entity.claims[propertyIds.spotifyTrackId]\r\n            ? ids[0]\r\n            : null;\r\n    }\r\n\r\n    get entityId() {\r\n        return this.entity.id;\r\n    }\r\n\r\n    private findEntitesByIds(ids: string[]) {\r\n        return this.relatedEntites.filter(e => ids.includes(e.id));\r\n    }\r\n}\r\n","import { classIds, propertyIds } from 'src/app/config/wikidata.config';\r\n\r\nexport const findSongsByTitleSparql = (title: string, limit = 20) => `\r\n  SELECT ?item WHERE {\r\n    ?item wdt:${propertyIds.instanceOf} ?type.\r\n    FILTER(?type = wd:${classIds.song} || ?type = wd:${classIds.single}).\r\n    ?item ?label \"${title}\"@en.\r\n    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\r\n  } LIMIT ${limit}`;\r\n","import { backendConfig } from './../../config/backend-config';\r\nimport { ByIdQueryOptions, WdkEntity } from './../../models/wikidata-models';\r\nimport { Injectable } from '@angular/core';\r\nimport wdk from 'wikidata-sdk';\r\nimport { propertyIds } from '../../config/wikidata.config';\r\nimport { findSongsByTitleSparql } from './sparql-queries';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WikidataService {\r\n\r\n  createSong(name: string, artists: string[], spotifyId: string) {\r\n    return fetch(backendConfig.host, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name, artists, spotifyId }),\r\n    });\r\n  }\r\n\r\n  setSpotifyTrackIdForEntity(entityId: string, spotifyId: string) {\r\n    return fetch(backendConfig.host, {\r\n      method: 'PUT',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ entityId, spotifyId }),\r\n    });\r\n  }\r\n\r\n  getSongBySpotifyId(spotifyId: string) {\r\n    return this.getEntityByClaim(propertyIds.spotifyTrackId, spotifyId);\r\n  }\r\n\r\n  getArtistBySpotifyId(spotifyId: string) {\r\n    return this.getEntityByClaim(propertyIds.spotifyArtistId, spotifyId);\r\n  }\r\n\r\n  getAlbumBySpotifyId(spotifyId: string) {\r\n    return this.getEntityByClaim(propertyIds.spotifyAlbumId, spotifyId);\r\n  }\r\n\r\n  async findSongsByTitle(title: string) {\r\n    const sparql = findSongsByTitleSparql(title);\r\n    const ids: string[] = await this.executeSparql(sparql);\r\n    if (ids.length === 0) {\r\n      return null;\r\n    }\r\n    const entities = await this.getEntities(new ByIdQueryOptions(ids));\r\n    return Object.values(entities);\r\n  }\r\n\r\n  async getEntities(query: ByIdQueryOptions): Promise<WdkEntity[]> {\r\n    const queryUrl = wdk.getEntities(query);\r\n    const results = await this.getJson(queryUrl);\r\n    return wdk.simplify.entities(results.entities);\r\n  }\r\n\r\n  private async executeSparql(sparql: string) {\r\n    const url = wdk.sparqlQuery(sparql);\r\n    const results = await this.getJson(url);\r\n    return wdk.simplifySparqlResults(results);\r\n  }\r\n\r\n  private async getEntityByClaim(claimId: string, claimValue: string): Promise<WdkEntity> {\r\n    const result = await this.getEntitiesByClaim(claimId, claimValue);\r\n    if (!result.ids || result.ids.length === 0) {\r\n      return null;\r\n    }\r\n    if (result.ids.length > 1) {\r\n      console.warn(`multiple match when calling getEntityByClaim. claimId: ${claimId},claimValue: ${claimValue}`);\r\n      console.warn(result);\r\n    }\r\n    return result.entities[result.ids[0]];\r\n  }\r\n\r\n  private async getEntitiesByClaim(claimId: string, claimValue: string)\r\n    : Promise<{\r\n      ids: string[],\r\n      entities: WdkEntity[];\r\n    }> {\r\n    const url = wdk.getReverseClaims(claimId, claimValue);\r\n    const resultWrapper = {\r\n      ids: null,\r\n      entities: null,\r\n    };\r\n    const body = await this.getJson(url);\r\n    const ids = wdk.simplify.sparqlResults(body);\r\n    if (ids.length === 0) {\r\n      return resultWrapper;\r\n    }\r\n    resultWrapper.ids = ids;\r\n    const query = new ByIdQueryOptions(ids);\r\n    resultWrapper.entities = await this.getEntities(query);\r\n    return resultWrapper;\r\n  }\r\n\r\n  private async getJson(url: string) {\r\n    const resp = await fetch(url);\r\n    if (resp.ok) {\r\n      return resp.json();\r\n    } else {\r\n      throw new Error(`${resp.status}: ${resp.statusText}`);\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}